# This Makefile contains the rules required to set up our
# Dapper-based build environment; it can be copied as-is to
# other projects (and needs to be copied, it can't be shared
# via the Dapper image since it's needed to retrieve the image)

export MAKEFLAGS

.dapper:
	@echo Downloading dapper
	@curl -sL https://releases.rancher.com/dapper/latest/dapper-`uname -s`-`uname -m` > .dapper.tmp
	@@chmod +x .dapper.tmp
	@./.dapper.tmp -v
	@mv .dapper.tmp .dapper

SELINUX_CONTEXT := $(shell (selinuxenabled && echo -S z) 2>/dev/null)
RUN_IN_DAPPER := ./.dapper -m bind $(SELINUX_CONTEXT)

# Only run command line goals in dapper (except things that have to run outside of dapper).
# Otherwise, make applies this rule to various files and tries to build them in dapper (which doesn't work, obviously).
$(filter-out .dapper shell targets $(NON_DAPPER_GOALS),$(MAKECMDGOALS)): .dapper
	-docker network create -d bridge kind
	+$(RUN_IN_DAPPER) make --debug=b $@

shell: .dapper
	$(RUN_IN_DAPPER) -s

# Run silently to just list the targets (hence we can't use the generic dapper wrapper recipe).
# This only lists targets accessible inside dapper (which are 99% of targets we use)
targets:
	@$(RUN_IN_DAPPER) make -pRrq : 2>/dev/null |\
		grep -oP '^(?!Makefile.*)[-[:alnum:]]*(?=:)' | sort -u

.PHONY: shell targets
