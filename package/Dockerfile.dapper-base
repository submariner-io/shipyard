FROM fedora:31

ENV DAPPER_HOST_ARCH=amd64 SHIPYARD_DIR=/opt/shipyard/
ENV HOST_ARCH=${DAPPER_HOST_ARCH} ARCH=${DAPPER_HOST_ARCH} \
    LINT_VERSION=v1.18.0 \
    HELM_VERSION=v2.14.1 \
    KIND_VERSION=v0.6.1 \
    KUBEFED_VERSION=0.1.0-rc3 \
    SCRIPTS_DIR=${SHIPYARD_DIR}/scripts

ENV GOLANG_ARCH_amd64=amd64 GOLANG_ARCH_arm=armv6l GOLANG_ARCH=GOLANG_ARCH_${ARCH} \
    GOPATH=/go GO111MODULE=on PATH=/go/bin:/usr/local/go/bin:${PATH} SHELL=/bin/bash GOFLAGS=-mod=vendor \
    GOPROXY=https://proxy.golang.org

# Requirements:
# Component      | Usage
# -----------------------------------------------------------
# gcc            | ginkgo
# git            | find the workspace root
# curl           | download other tools
# moby-engine    | Dapper (Docker)
# golang         | build
# kubectl        | e2e tests (in kubernetes-client)
# golangci-lint  | code linting
# helm           | e2e tests
# kubefedctl     | e2e tests
# kind           | e2e tests
# ginkgo         | tests
# goimports      | code formatting
# make           | OLM installation
# findutils      | validate (find go packages)
# shflags        | shell script flags
# upx            | binary compression
# jq             | JSON processing (GitHub API)
# diffutils      | required for goimports
# ShellCheck     | shell script linting
RUN dnf -y distrosync --nodocs --setopt=install_weak_deps=False && \
    dnf -y install --nodocs --setopt=install_weak_deps=False \
                   gcc git-core curl moby-engine make golang kubernetes-client \
                   findutils upx jq golang-x-tools-goimports ShellCheck shflags && \
    dnf -y remove libsemanage && \
    rpm -e --nodeps selinux-policy-targeted && \
    dnf -y clean all && \
    curl -L https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | sh -s -- -b $(go env GOPATH)/bin -d ${LINT_VERSION} && \
    curl "https://storage.googleapis.com/kubernetes-helm/helm-${HELM_VERSION}-linux-${ARCH}.tar.gz" | tar -xzf - && \
    mv linux-${ARCH}/helm /usr/bin/ && chmod a+x /usr/bin/helm && rm -rf linux-${ARCH} && \
    curl -L "https://github.com/kubernetes-sigs/kubefed/releases/download/v${KUBEFED_VERSION}/kubefedctl-${KUBEFED_VERSION}-linux-${ARCH}.tgz" | tar -xzf - && \
    mv kubefedctl /usr/bin/ && chmod a+x /usr/bin/kubefedctl && \
    curl -Lo /usr/bin/kind "https://github.com/kubernetes-sigs/kind/releases/download/${KIND_VERSION}/kind-linux-${ARCH}" && chmod a+x /usr/bin/kind && \
    GOFLAGS="" go get -v github.com/onsi/ginkgo/ginkgo && \
    GOFLAGS="" go get -v golang.org/x/tools/cmd/goimports && \
    upx /go/bin/{ginkgo,golangci-lint} /usr/bin/{containerd*,ctr,docker*,goimports,helm,kind,kube*,protoc-gen-gogoctrd,runc} /usr/lib/golang/pkg/tool/*/* && \
    ln -f /usr/bin/kubectl /usr/bin/hyperkube

# Copy CI deployment scripts into image to share with all submariner-io/* projects
WORKDIR $SCRIPTS_DIR
COPY scripts/shared/ .
COPY Makefile.inc ${SHIPYARD_DIR}
