---
kind: ConfigMap
apiVersion: v1
metadata:
  name: test-ConfigMap
  namespace: test
data:
  foo: "bar"
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: test-ClusterRole
rules:
  - apiGroups: ["acme.org"]
    resources:
      - pods
    verbs:
      - get
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: test-ClusterRoleBinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: test-ClusterRole
subjects:
  - kind: ServiceAccount
    name: test-ServiceAccount
    namespace: test
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: test-DaemonSet
  namespace: test
  labels:
    app: test-controllers
spec:
  selector:
    matchLabels:
      app: test-controllers
  template:
    metadata:
      labels:
        app: test-controllers
    spec:
      containers:
        - name: foo
          image: quay.io/foo/bar
          command:
            - /opt/bin/foo
          env:
            - name: FOO
              value: "bar"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: test-Deployment
  namespace: test
  labels:
    app: test-controllers
spec:
  replicas: 2
  selector:
    matchLabels:
      app: test-controllers
  template:
    metadata:
      labels:
        app: test-controllers
    spec:
      containers:
        - name: foo
          image: quay.io/foo/bar
          command:
            - /opt/bin/foo
          env:
            - name: FOO
              value: "bar"
---
apiVersion: v1
kind: Pod
metadata:
  name: test-Pod
  namespace: test
spec:
  containers:
    - name: foo
      image: quay.io/foo/bar
      command:
        - /opt/bin/foo
      env:
        - name: FOO
          value: "bar"
---
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: test-PodSecurityPolicy
spec:
  privileged: true
  volumes:
    - configMap
  allowedHostPaths:
    - pathPrefix: "/etc/foo"
  runAsUser:
    rule: RunAsAny
  allowedCapabilities: ['NET_ADMIN']
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: test-Role
  namespace: test
rules:
  - apiGroups: ["foo"]
    resources:
      - nodes
      - services
    verbs:
      - get
      - list
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: test-RoleBinding
  namespace: test
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: test-Role
subjects:
  - kind: ServiceAccount
    name: test-ServiceAccount
    namespace: test
---
apiVersion: v1
kind: Service
metadata:
  name: test-Service
  namespace: test
spec:
  clusterIP: "1.2.3.4"
  type: "ClusterIP"
  externalName: "foo"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: test-ServiceAccount
  namespace: test