# shellcheck shell=bash
### Constants ###

export CYAN_COLOR NO_COLOR
CYAN_COLOR=$(echo -e '\e[36m')
NO_COLOR=$(echo -e '\e[0m')

### Functions ###

# Function to print each bash command before it is executed.
# Only outputs when $DEBUG_PRINT is set, to control printing precisely.
# Skips common command (printing, control structures, etc).
# Skips parsing `$()` as it causes the internal command to be executed twice.
# Skips parsing `=(` as it causes an error for eval.
# Skips printing function name twice (caveat - if we ever do a recursion, we won't see it).
function trap_commands() {
    trap '[[ "${DEBUG_PRINT}" == true ]] &&
          declare -g cmd="$BASH_COMMAND" cur_func="${FUNCNAME[0]}" &&
          ! [[ "$cmd" =~ ^(echo|read|\[|while|for|local|printf) ]] &&
          { [[ "$cmd" =~ =\$?\( ]] && cmd="${cmd@Q}" || cmd=$(eval echo "$cmd"); } &&
          [[ -n "$cmd" && "${cmd%% *}" != "$cur_func" ]] &&
          ctxt="[$(date +%R:%S.%3N)] [dir=${PWD##*/}${cluster:+; cl=${cluster}}${cur_func:+; fn=${cur_func}}]" &&
          echo "${CYAN_COLOR}${ctxt}\$ ${cmd}${NO_COLOR}" >&2; true' DEBUG
}

### Main ###

set -T
trap_commands
