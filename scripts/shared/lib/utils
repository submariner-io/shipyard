# This should only be sourced
if [ "${0##*/}" = "utils" ]; then
    echo "Don't run me, source me" >&2
    exit 1
fi

### Constants ###

readonly KIND_REGISTRY=kind-registry

### Functions ###

# Mask kubectl to use cluster context if the variable is set and context isn't specified,
# otherwise use the config context as always.
function kubectl() {
    context_flag=""
    if [[ -n "${cluster}" && ! "${@}" =~ "context" ]]; then
        context_flag="--context=${cluster}"
    fi
    command kubectl ${context_flag} "$@"
}

# Run cluster commands in parallel.
# 1st argument is the numbers of the clusters to run for, supports "1 2 3" or "{1..3}" for range
# 2nd argument is the command to execute, which will have the $cluster variable set.
function run_parallel() {
    clusters=$(eval echo "$1")
    cmnd=$2
    declare -A pids
    for i in ${clusters}; do
        cluster="cluster${i}"
        ( $cmnd | sed "s/^/[${cluster}] /" ) &
        unset cluster
        pids["${i}"]=$!
    done

    for i in ${!pids[@]}; do
        wait ${pids[$i]}
    done
}

function registry_running() {
    docker ps --filter name="^/?$KIND_REGISTRY$" | grep $KIND_REGISTRY
    return $?
}

