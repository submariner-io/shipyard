# shellcheck shell=bash
# shellcheck source=scripts/shared/lib/source_only
. "${BASH_SOURCE%/*}"/source_only

### Constants ###

# shellcheck disable=SC2034 # this variable is used elsewhere
# Some projects rely on the default subctl being determined by the PATH
readonly SUBCTL=${SUBCTL:-subctl}

### Variables ###

declare -gA component_by_image
component_by_image['submariner-gateway']=submariner-gateway
component_by_image['submariner-globalnet']=submariner-globalnet
component_by_image['submariner-networkplugin-syncer']=submariner-networkplugin-syncer
component_by_image['submariner-operator']=submariner-operator
component_by_image['submariner-route-agent']=submariner-routeagent
component_by_image['lighthouse-agent']=submariner-lighthouse-agent
component_by_image['lighthouse-coredns']=submariner-lighthouse-coredns

### Functions ###

function deploytool_prereqs() {
    command -v subctl > /dev/null 2>&1
    "${SUBCTL}" version
}

function setup_broker() {
    local extra_flags=()
    [[ "${GLOBALNET}" = true ]] && extra_flags+=(--globalnet)
    if [[ "${LIGHTHOUSE}" == true ]]; then
        extra_flags+=(--components 'service-discovery,connectivity')
    else
        extra_flags+=(--components connectivity)
    fi
    echo "Installing broker..."

    # We use the "subctl" image_tag to indicate that we want to let
    # subctl use its default repository and version
    if [[ "${SUBM_IMAGE_TAG}" != "subctl" ]] && [[ "$AIR_GAPPED" = true || "${PRELOAD_IMAGES}" =~ submariner-operator ]]; then
        extra_flags+=(--repository "${SUBM_IMAGE_REPO}" --version "${SUBM_IMAGE_TAG}")
    fi

    (
        cd "${OUTPUT_DIR}" &&
        "${SUBCTL}" deploy-broker \
               --kubecontext "${cluster}" \
                "${extra_flags[@]}"
    )
}

function subctl_install_subm() {
    local extra_flags=()
    if [[ ${cluster_subm[$cluster]} != "true" ]]; then
        echo "Skipping installation as requested in cluster settings"
        return
    fi

    # We use the "subctl" image_tag to indicate that we want to let
    # subctl use its default repository and version
    if [ "${SUBM_IMAGE_TAG}" != "subctl" ]; then
        # Set repo/ver combo for air gapped environment, to make sure all Submariner images are only taken from local repo.
        [[ "$AIR_GAPPED" = true ]] && extra_flags+=(--repository "${SUBM_IMAGE_REPO}" --version "${SUBM_IMAGE_TAG}")

        for image in ${PRELOAD_IMAGES}; do
            local image_key="${component_by_image[$image]}"
            [[ -n "${image_key}" ]] || continue
            extra_flags+=(--image-override "${image_key}=${SUBM_IMAGE_REPO}/${image}:${SUBM_IMAGE_TAG}")
        done
    fi

    [[ "$LOAD_BALANCER" = true ]] && extra_flags+=(--load-balancer)
    if [ "${PASS_CIDR_ARGS}" == "true" ];then
        extra_flags+=(--clustercidr "${cluster_CIDRs[${cluster}]}" --servicecidr "${service_CIDRs[${cluster}]}")
    fi

    "${SUBCTL}" join --kubecontext "${cluster}" \
                --clusterid "${cluster}" \
                --nattport "${CE_IPSEC_NATTPORT}" \
                --globalnet-cidr "${global_CIDRs[$cluster]}" \
                --natt=false \
                --cable-driver "${CABLE_DRIVER}" \
                "${extra_flags[@]}" \
                "${OUTPUT_DIR}"/broker-info.subm
}

function install_subm_all_clusters() {
    run_subm_clusters subctl_install_subm
}
