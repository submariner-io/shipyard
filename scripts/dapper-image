#!/bin/bash
set -e

#
# The purpose of this script is to ensure that dapper-base:latest is updated and available locally
# and if dapper-base is modified we make sure it's rebuilt and tagged locally so any next
# execution through dapper will have the new image.
#

source ${SCRIPTS_DIR}/lib/debug_functions
source ${SCRIPTS_DIR}/lib/version

ARCH=${ARCH:-"amd64"}
SUFFIX=""
[ "${ARCH}" != "amd64" ] && SUFFIX="_${ARCH}"

TAG=${TAG:-${VERSION}${SUFFIX}}
REPO=${REPO:-quay.io/submariner}

BASE_DEPS_IMAGE_NAME=shipyard-dapper-base-deps
BASE_DEPS_IMAGE_DOCKERFILE=package/Dockerfile.base-deps
BASE_DEPS_IMAGE=${REPO}/${BASE_DEPS_IMAGE_NAME}:${TAG}
DAPPER_BASE_IMAGE=${REPO}/shipyard-dapper-base:${TAG}

# always compare with upstream master, which is the source for the published dapper image
UPSTREAM_REMOTE=$(git remote -v | grep submariner-io/shipyard | awk '{ print $1 }' | head -n 1)
CHANGED_FILES_LOCAL=$(git diff --name-only remotes/$UPSTREAM_REMOTE/master)

# Detect when we are on a merged patch
LAST_COMMIT_LOCAL=$(git rev-parse HEAD)
LAST_COMMIT_MASTER=$(git rev-parse remotes/$UPSTREAM_REMOTE/master)

function rebuild_image_if_changed() {
    local image_name=$1
    local image_file=$2
    shift 2
    local changed_files=("${image_file}" "${@}")
    local latest_image="${REPO}/${image_name}:latest"
    local local_image="${REPO}/${image_name}:${TAG}"

    for check_file in "${changed_files}"; do
        if [[ "${CHANGED_FILES_PR[@]}" =~ "${changed_file}" ]] ||
           [[ "${CHANGED_FILES_LOCAL[@]}" =~ "${changed_file}" ]] ||
           [[ "${LAST_COMMIT_LOCAL}" = "${LAST_COMMIT_MASTER}" ]]; then
            echo "${image_file} was modified, rebuilding image"
            docker build -t ${local_image} -f ${image_file} .
            docker tag ${local_image} ${latest_image}
            return
        fi
    done
}

rebuild_image_if_changed shipyard-dapper-base-deps package/Dockerfile.base-deps
rebuild_image_if_changed shipyard-dapper-base package/Dockerfile.dapper-base package/Dockerfile.base-deps scripts/shared/ Makefile.inc

